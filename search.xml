<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F2019%2F09%2F25%2F%E5%9F%BA%E7%A1%80_%E8%BF%9B%E5%88%B6%2F</url>
    <content type="text"><![CDATA[进制转换 纯整数]]></content>
  </entry>
  <entry>
    <title><![CDATA[NEO4J 理解及应用]]></title>
    <url>%2F2019%2F09%2F20%2F%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F_Neo4j%E5%88%9D%E6%B6%89%2F</url>
    <content type="text"><![CDATA[Neo4j是一个高性能的,NOSQL（非关系型）图形数据库，它将结构化数据存储在网络上而不是表中 笔记：ヾ暖色调 「微笑 再美 再甜 不是妳的 都不特别」 一 数据库的关键词 节点： 插入的每个元素作为数据库中的一个节点 每个节点有对应的标签 可以有属性也可以没有 关系： 节点与节点间的联系 由单向的也有双向的 关系也可以有属性 属性： 节点或者关系的特征 标签： 节点的分类 二 NEO4J 数据库的构成基础 neo4j 是基于图论实现的算法 neo4j可以视为高性能的图引擎 每个节点对应图论中的节点 关系对应图论中的边 三 开始制作节点 12345678910111213141516171819CREATE (b:student&#123;name:"俞振杰",age:19,sex:"boy"&#125;) RETURN bCREATE (b:student&#123;name:"朱长昊",age:20,sex:"boy"&#125;) RETURN bCREATE (b:student&#123;name:"徐天祥",age:20,sex:"boy"&#125;) RETURN bCREATE (b:student&#123;name:"吴勇",age:20,sex:"boy"&#125;) RETURN bCREATE (b:student&#123;name:"王星煜",age:20,sex:"boy"&#125;) RETURN borCREATE (:student&#123;name:"俞振杰",age:19,sex:"boy"&#125;),(:student&#123;name:"朱长昊",age:20,sex:"boy"&#125;),(:student&#123;name:"徐天祥",age:20,sex:"boy"&#125;),(:student&#123;name:"吴勇",age:20,sex:"boy"&#125;),(:student&#123;name:"王星煜",age:20,sex:"boy"&#125;)出现了重复的多余节点MATCH (a:student&#123;name:"俞振杰"&#125;)WITH a SKIP 1 DELETE a清空数据库MATCH (n) DETACH DELETE n 四 开始建立关系 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748假定三种关系：1. a关系:aaa2. b关系:bbb3. c关系:ccc4. d关系:dddMATCH (a:student&#123;name:"俞振杰"&#125;) MATCH (b:student&#123;name:"吴勇"&#125;) CREATE (a)-[r:aaa]-&gt;(b) RETURN rMATCH (a:student&#123;name:"吴勇"&#125;) MATCH (b:student&#123;name:"俞振杰"&#125;) CREATE (a)-[r:aaa]-&gt;(b) RETURN rMATCH (a:student&#123;name:"俞振杰"&#125;) MATCH (b:student&#123;name:"朱长昊"&#125;) CREATE (a)-[r:aaa]-&gt;(b) RETURN rMATCH (a:student&#123;name:"朱长昊"&#125;) MATCH (b:student&#123;name:"俞振杰"&#125;) CREATE (a)-[r:aaa]-&gt;(b) RETURN rMATCH (a:student&#123;name:"徐天祥"&#125;) MATCH (b:student&#123;name:"朱长昊"&#125;) CREATE (a)-[r:aaa]-&gt;(b) RETURN rMATCH (a:student&#123;name:"朱长昊"&#125;) MATCH (b:student&#123;name:"徐天祥"&#125;) CREATE (a)-[r:aaa]-&gt;(b) RETURN rorMATCH (yzj:student&#123;name:"俞振杰"&#125;) MATCH (wy:student&#123;name:"吴勇"&#125;) MATCH (zch:student&#123;name:"朱长昊"&#125;) MATCH (xtx:student&#123;name:"徐天祥"&#125;) MATCH (wxy:student&#123;name:"王星煜"&#125;)CREATE (yzj)-[:aaa]-&gt;(wy) CREATE (wy)-[:aaa]-&gt;(yzj) CREATE (wy)-[:bbb]-&gt;(zch) CREATE (zch)-[:bbb]-&gt;(wy) CREATE (zch)-[:ccc]-&gt;(xtx) CREATE (xtx)-[:ccc]-&gt;(zch) CREATE (wxy)-[:ddd]-&gt;(wy) CREATE (wy)-[:ddd]-&gt;(wxy) 删除所有关系MATCH (:student&#123;name:"俞振杰"&#125;)-[r1:aaa]-&gt;(:student&#123;name:"吴勇"&#125;) MATCH (:student&#123;name:"吴勇"&#125;)-[r2:aaa]-&gt;(:student&#123;name:"俞振杰"&#125;) MATCH (:student&#123;name:"吴勇"&#125;)-[r3:bbb]-&gt;(:student&#123;name:"朱长昊"&#125;) MATCH (:student&#123;name:"朱长昊"&#125;)-[r4:bbb]-&gt;(:student&#123;name:"吴勇"&#125;) MATCH (:student&#123;name:"朱长昊"&#125;)-[r5:ccc]-&gt;(:student&#123;name:"徐天祥"&#125;) MATCH (:student&#123;name:"徐天祥"&#125;)-[r6:ccc]-&gt;(:student&#123;name:"朱长昊"&#125;) MATCH (:student&#123;name:"王星煜"&#125;)-[r7:ddd]-&gt;(:student&#123;name:"吴勇"&#125;) MATCH (:student&#123;name:"吴勇"&#125;)-[r8:ddd]-&gt;(:student&#123;name:"王星煜"&#125;) DELETE r1DELETE r2DELETE r3DELETE r4DELETE r5DELETE r6DELETE r7DELETE r8 五 划重点： 如何查询两节点之间的关系 我要查询俞振杰和徐天祥之间的关系，怎么查？ 一句话解决！ 和 Linux 一样快！ 12MATCH data=(yzj:student&#123;name:"俞振杰"&#125;)-[*1..3]-&gt;(xtx:student&#123;name:"徐天祥"&#125;) RETURN data 总结 相比于MySQL的优势：当查询的节点建不存在直接关系的时候，要想查询到两节点建的间接关系十分复杂！ 关系间的可视化处理，图的数据结构直观而形象地表现了现实世界的应用场景 闪电般的读/写速度，无与伦比的高性能表现，直接存储在硬盘中，没有表的概念 开源：其开源的社区版吸引了众多第三方的使用和推广]]></content>
      <categories>
        <category>软件体系结构与设计模式</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[云计算的基本概念]]></title>
    <url>%2F2019%2F09%2F18%2F%E4%BA%91%E8%AE%A1%E7%AE%97%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8_%E6%A6%82%E8%AE%BA%2F</url>
    <content type="text"><![CDATA[笔记：ヾ暖色调 「说好不哭」 1. 云计算之的是IT资源的交付和使用模式，通过网络以按需、易扩展的方式获取所需要的资源（软件、平台、硬件），提供资源的网络被称为云，“云”的资源在使用者看来可以是无限拓展的。 2. 云计算特点： 资源池弹性可扩张 重要特征：资源的集中管理和输出 分散的资源：使用方法造成了资源的极大浪费 资源集中：利用效率大大提高，资源池的弹性化扩张能力成为云计算系统的一个基本要求。 按需提供资源服务 好处：冥界的适应用户对资源不断变化的需求 //TODO 网络化的资源接入 基于云计算的应用服务通常都是通过 网络化 来提供，云计算技术必须实现资源的网络化接入才能有效的向应用开发者和最终用户提供资源服务。 虚拟化 利用软件技术实现硬件资源的虚拟化管理、调度及应用，利用虚拟化可大大降低维护成本和提高资源利用率 提高可靠性和安全性 //TODO 3. 云计算时代基本三种角色 资源的整合运营者 资源的使用者 终端客户 4. 云计算的分类： 按技术路线分类 资源整合型云计算：大多表现为集群架构，通过大量节点的计算资源和存储资源整合后输出。这类系统通常能够实现跨界点弹性化的资源池构建，核心技术：为分布式计算和存储技术（如 MPI、hadoop、HPCC、Storm） 资源切分型云计算：典型：虚拟化系统，这类云计算系统通过系统虚拟化实现对单个服务器资源的弹性切分，从而有效的利用服务器资源，核心技术：虚拟化技术（优点：用户的系统可以不做任何更改接入采用虚拟化技术的云系统，缺点：跨界点的资源整合代价比较大，VMware） //TODO 按资源封装的层次分类 基础设施即服务：单纯的把计算和存储资源不经封装的直接通过网络以服务的形式提供给用户使用（IaaS把所需的工具当成服务提供给用户，是的用户能够按需获取IT基础设施，IaaS主要由计算机硬件、网络//TODO 平台即服务：计算和存储资源经过封装后，以某种接口协议的形式提供给用户，资源的使用者不再直接面对底层资源 软件即服务:将计算和存储资源封装为用户可以直接使用的应用并通过网络提供给用户，SaaS面向的服务对象为最终用户，用户只是对软件功能进行使用，无需了解任何云计算系统的内部结构。 5. 云计算的服务类型 IaaS：基础设施即服务：IaaS是把计算存储网络以及搭建应用环境所需的工具封装成服务给用户。 特点 IT资源以服务提供 基础设施可拓展 计费服务灵活，按实际使用资源计费 多租户 企业级的基础设施 核心技术： 虚拟化技术 分布式技术 高速网络技术 超大规模资源管理技术 云服务计费技术 优势： 低成本 免维护 伸缩性强 支持应用广泛 灵活迁移 PaaS：平台即服务：是一种分布式平台服务，提供一个包括应用设计、应用开发应用测试及应用托管的完整计算机平台。 核心技术： RESET技术 多租户技术 并行计算技术 应用服务器 分布式缓存 优势： 友好的开发环境 丰富的服务 精细的管理和控制 弹性强 多租户机制 整合率高 SaaS：软件即服务：软件服务提供商为了满足用户的需求提供的软件的计算能力（升级维护等都有运营商维护） 优势： 使用简单 支持公开协议 成本低 安全保障 关键技术： 大规模租户支持 认证和安全 定价和计费 服务整合 开发和定制 6. 云计算部署模式 IDC公有云：公有云是一种对公众开放的云服务，由云服务提供商运营，为最终用户提供各种IT资源，可以支持大量用户的并发请求 优势，其所有的应用和程序都存放在公有云平台上，无需用户前期漫长的布置 同时具有规模的优势运营成本低 但是安全和隐私问题存在隐患 私有云：是指组织机构建设的专供自己使用的云平台 部署在企业内部网络，私有云可以支持动态灵活的基础设施，降低IT架构的复杂度，降低企业IT运营成本。 缺点是企业需要有大量的前期投资，需要采用传统的商业模型。 私有云的规模相对于公有云来说一般要小得多，无法充分发挥规模效应 混合云：由私有云及外部云提供商构建的还和云计算模式，在公有云上运行非核心数据，在私有云上支持核心程序和敏感数据。 部署要求高 两种云相互独立，可以发挥出多种云计算模型各自的优势 通过混合云，企业可以在私有云的斯密性和公有云的低廉之间作权衡 社区云：用户是一个特定范围的群体，社区云是由几家企业联合管理和提供给自己使用的，隐私程度介于公有云和私有云之间，成本共同承担 7. 云计算的使用场景 IDC公有云：加入了系统虚拟化、自动化管理和能源监控等技术 企业私有云：帮助企业提升内部数据中心的运维水平 云存储系统：整合网络中多种存储设备来对外提供云存储服务 虚拟桌面云：桌面虚拟化技术 开发测试云：适合那些需要开发和测试多种应用的组织和企业使用 协作云：适合那些需要一定的协作工具，但不希望维护软硬件和支付高昂的软件许可证费用的企业与个人。 HPC云：提供可以定制的高性能计算环境 电子政务云：使用云计算技术对政府管理和服务职能进行精简、优化、整合，通过信息化手段在政务上实现各种业务流程办理和职能服务 8. 云计算带来的变革 主管体现 云计算时代，计算机处理能力集中在数据中心，IT实现服务化 IT开销由一次购买变成按需购买，维护成本降低 用户的工作方式更加移动化合作化，可以更迅速的开启新业务 帮助发展中国家，提供更多创业机会]]></content>
      <categories>
        <category>云计算及其应用</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[前言概述及操作系统概论]]></title>
    <url>%2F2019%2F09%2F18%2F%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%A1%E7%AE%97_%E6%A6%82%E8%AE%BA%2F</url>
    <content type="text"><![CDATA[北京理工大学 马锐 mary@bit.edu.cn 办公地点：软件楼405;实验室：软件楼420 学时：56 上课地点：1-102 图书馆四楼1号机房 选课密码：ma2017 期末70% + 平时30% 期末考试闭卷（笔试） 笔记：ヾ暖色调「今日的风儿甚是喧嚣」 1. 教学安排 2. 教材及其参考书 3. 考核方式 4. 内容简介（后面看看就好了） 操作系统概述：重点了解操作系统概念特征功能和提供的服务，其分类和展以及环境 进程管理：处理机管理，掌握进程和线程的概念，典型处理机调度算法，号量的概念等 内存管理：掌握内存管理的基本概念，各种不同内存管理方式的既不原理工作过程等 文件管理：文件的逻辑结构，物理结构，目录管理和文件存储空间的管理等 输入输出管理：掌握设备分配、设备驱动、中断处理、缓冲区管理等，重掌握输入输出控制方式、中断处理等 5. 操作系统的定义： 从用户的角度看：他是作为用户和计算机硬件系统之间的接口 设计目标：有效性和方便性 计算机系统设计者角度：作为计算机系统资源的管理者 设计目标：提高资源利用率 //不同的时期侧重点不同，早期硬件资源昂贵，共享资源，因此提高资源利用率更为侧重， //随着PC机，手机等兴起，机器的硬件资源完全被个人占有，因此有效性和方便性更为侧重一些 （定义有多种）操作系统（一种中间键 middleware）是计算机系统中的一个系统软件，是一些程序模块的集合，尽可能有效的组织和管理软硬件资源，合理控制，使得用户能够灵活有效方便的使用计算机，是计算机和用户之间的接口。 概念补充： CPU：执行指令的硬件 核：执行指令和本地存储数据的组建 Core: the basic computation unit of the CPU Multicore：Including multiple computing cores on the same CPU 处理器：一个包含一个或多个CPU的物理芯片 单处理器系统：single-processor system 多处理器系统：two(or more) processors, each with a single-core &gt;CPU. Multiprocessor: Including multiple processors Multicomputer(多处理机) 类型： 非对称多处理器：each processor is assigned a special task 对称多处理器：each processor performs all tasks,all processors &gt;share physical memory over the system bus 除非特别声明，否则基本计算单元是CPU 6. 操作系统 无OS的计算机系统 程序员直接使用计算机硬件系统，效率低下 但用户独占全机 CPU等待人工操作 人工负责输入输出 人工负责计算机调度 人工负责编排作业的运行顺序 单道批处理系统 以常住内存的监控程序代替人工调度和作业编排，减少人工干预和等待时间，加快作业运行速度 硬件结构 早期联机批处理：作业的输入输出计算都要在CPU的控制下进行，效率低 早期脱机批处理：小型卫星机控制外部设备的输入输出 优点： 系统自动化程度高、吞吐量大，资源利用率高 减少了CPU的空间时间 提高了I/O效率 缺点： CPU与外设串行（CPU必须等待外设响应） 作业周转时间长，用户无法实现对作业的控制 多道批处理系统 引入原因：CPU与外设并行执行，提高CPU利用率 在内存中同时存放多道程序，是指在系统中处于交叉运行状态（宏观上并行运行，微观上交叉运行） 查询词汇 作业 job 程序 program 进程 process 线程 thread 任务 task]]></content>
      <categories>
        <category>操作系统与分布式计算</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[计算机网络与工程概论]]></title>
    <url>%2F2019%2F09%2F18%2F%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B8%8E%E5%B7%A5%E7%A8%8B_%E6%A6%82%E8%AE%BA%2F</url>
    <content type="text"><![CDATA[北京理工大学计算机学院 薛静锋 xuejf@bit.edu.cn 当这门课结束，要清晰了解发送一封电子邮件从发送到接收的各个细节 笔记：ヾ暖色调 「微笑 再美 再甜 不是妳的 都不特别」 一 考察目标 掌握计算机网络的基本概念、原理和方法 掌握计算机为那里国的体系结构和典型网络协议 了解典型网络设备的组成和特点，理解典型网络设备的工作原理，能够配置并操作常用计算机网络设备 能够运用计算机网络系统的分析、设计和应用 二 毕业要求指标点（看看就好） 能够识别计算机软硬件系统组成并了解工作原理 能够理解系统软件的设计思路和基本原理并能运用响应原理采用科学方法解决问题 能够建立软件模型、设计实验、分析与解释数据、并通过信息综合得到合理有效的结论 能够融合专业知识结构，具备对复杂软件工程问题进行深入研究的能力 三 参考教材 &amp; PPT公邮 《计算机网络》 谢希仁 第7版 账号： 密码： 四 计算机网络的定义 由「自主计算机」「互联」起来的「集合体」 自主计算机：由独立的硬件和软件两部分组成，能够完整实现计算机各种功能（可以脱离网络工作） 互联：计算机之间实现通信 集合体：所有使用通信线路及互联设备连接起来的自主计算机的集合 与主从式计算机区别： 计算机网络：每台计算机具有独立的操作系统，不属于某台主机 主从事计算机：许多终端与一台主机相连，由主机控制从属机（终端机不是自主计算机，无法自主工作） 与分布式计算机系统的区别： 分布式：存在着一个能够为用户自动管理资源的网络操作系统，由它调用完成用于任务所需要的资源，而整个网络像一个大的计算机系统一样，对用户透明 计算机网络为分布式系统的研究提供了技术基础，而分布式系统是计算机网络技术发展的高级阶段 五 计算机网络的组成 硬件 计算机：个人计算机、大型计算机等 称为端系统 通信设备（中间系统）：交换机和路由器 接口设备：网卡，modem（猫）等，是网络和计算机的接口 传输介质：双绞线、同轴电缆等 软件 通信协议：传输协议（TCP/IP等） 应用软件：如WWW、EMAIL、FTP等 六 计算机网络的功能 共享资源访问（网站） 远程用户通信（EMAIL） 网上事务处理（电子商务） 七 计算机网络的分类 分类举例： 从网络的作用范围：局域网、广域网、城域网、个域网 从网络的拓扑结构：总线网、环形网、星型网、树形网、网状网、混合网 从网络使用的通信协议：TCP/IP、ATM、X.25、FDDI 从网络的交换功能：电路交换网、报文交换网、分组交换网 从网络的传输媒体：双绞线网、光纤网、卫星网、无线网 从网络的服务对象：企业网、校园网、园区网、政府网 从网络的使用者：专用网、公用网 从网络的应用性质：远程教育网、证券网、税务网 分类重要因素 传输技术 广播技术（种类：广播，多播，通常用于小网络）： 只有一个通信信道，网络上所有的机器都共享该信道。在机器之间传递的是分组（packet），任何一个机器发送短消息，都会被其他所有的机器接收到。 在分组中有一个地址域，指明了该分组的目标接收者 一台机器收到分组后，它检查地址域。如果该分组正是发送给它的，则接受这个分组，否则就忽略该分组。 点到点式（大网络）： 通信过程： 整个网络由许多的连接构成，每一个对应一台机器 为了将分组从元段传送到目的地，可能首先要经过许多中间中间机器 距离尺度 局域网： 覆盖有限的地理范围，提供高数据传输速率（10Mbps～100Gbps）、低误码率的高质量数据传输环境，一般属于一个单位所有，易于建立、维护与扩展，从介质访问控制方法的角度，局域网可分为共享介质 式局域网与交换式局域网两类 城域网： 城域网覆盖了一个城市 最著名的城域网的例子是有线电视网 城域网是介于广域网与局域网之间的一种高速网络 广域网： 组成： 资源子网（主机） 通信子网（交换节点和传输线路） 技术特点： 广域网也称为远程网 覆盖的地理范围从几十公里到几千公里 覆盖一个国家、地区，或横跨几个洲，形成国际性的远程网络 通信子网主要使用分组交换技术 它将分布在不同地区的计算机系统互连起来，达到资源共享的目的 八 发展历史 新型网络的基本特点： 网络用于计算机之间的数据传送，而不是为了打电话。 网络能够连接不同类型的计算机，不局限于单一类型的计算机。 所有的网络结点都同等重要，因而大大提高网络的生存性。 计算机在进行通信时，必须有冗余的路由。 网络的结构应当尽可能地简单，同时还能够非常可靠地传送数据。 转变（ARPANET的成功使 计算机网络的概念发生根本变化） 早期面向终端的网络是以单个主机为中心的星形网：各终端通过通信线路共享昂贵的中心主机的硬件和软件资源 分组交换网则是以网络为中心，主机都处在网络的外围：用户通过分组交换网可共享连接在网络上的许多硬件和各种丰富的软件资源 九 网络的体系结构： 计算机网络的体系结构(architecture)是计算机网络的各层及其协议的集合 不同的体系结构层数不同 体系结构就是这个计算机网络及其部件所应完成的功能的精确定义 实现(implementation)是遵循这种体系结构的前提下用何种硬件或软件完成这些功能的问题 体系结构是抽象的，而实现则是具体的，是真正在运行的计算机硬件和软件 层（层数不能太少，会导致每层协议过于复杂，太多又会在描述各层功能系统的工程任务中遇到困难）： 使用了信息隐蔽、抽象数据类型以及面向对象的设计方法 目的是向上层提供服务，上层可以使用其提供的服务，但对于其内部的状态和算法不可见 服务：下层（n-1层）向上层（n层）提供的功能，方向是垂直的 接口：存在于每一对相邻层之间的临界处，下层通过接口向上层提供服务 协议：对等层关于如何进行通信的一种规则约定，是对该层功能如何实现的一种定义 因特网五层协议体系结构： 物理层(physical layer) 数据链路层(data link layer) 网络层(network layer) 传输层(transport layer) 应用层(application layer) 十 传输设计 物理层 数据链路层（MAC地址和网卡一一对应）： 负责：寻址和信道的竞争控制，冲突调节 指定协议，规定如何竞争，如何调节冲突 设置物理地址，标识每一台机器（网卡） 传输层（端口号，判断该把数据包给哪个应用），做应用程序的标识、协调发送的速度和负责端口到端口的正确传输 当在广域网中通信时，需要在传输层和数据链路层中添加一个网络层。实现局域网之间的通信]]></content>
      <categories>
        <category>计算机网络与工程</category>
      </categories>
  </entry>
</search>
